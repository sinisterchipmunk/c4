(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var CARS;

CARS = [
  {
    make: 'Dodge',
    model: 'Challenger',
    year: '2015',
    image: 'http://zombiedrive.com/images/2015-dodge-challenger-4.jpg'
  }
];

c4(function(bus) {
  var fn;
  fn = function() {
    return bus.channel('cars').publish('loaded', CARS);
  };
  return setTimeout(fn, 3000);
});


},{}],2:[function(require,module,exports){
c4.view('cars-list', {
  path: '/modules/cars/views/list.html',
  init: function(bus) {
    var cars;
    cars = null;
    bus.channel('cars').subscribe('loaded', function(data) {
      cars = data;
      return bus.channel('cars-list').publish('stale');
    });
    return bus.channel('cars-list').subscribe('compile', function(compile) {
      return compile.link({
        cars: cars,
        source: 'cars'
      });
    });
  }
});


},{}],3:[function(require,module,exports){
c4.view('cars-show', {
  path: '/modules/cars/views/show.html',
  init: function(bus) {
    var cars, selection;
    cars = null;
    selection = null;
    bus.channel('cars').subscribe('loaded', function(data) {
      cars = data;
      return bus.channel('cars-show').publish('stale');
    });
    bus.channel('cars-show').subscribe('params', function(data) {
      selection = data.car;
      return bus.channel('cars-show').publish('stale');
    });
    return bus.channel('cars-show').subscribe('compile', function(compile) {
      return compile.link({
        car: cars != null ? cars[selection] : void 0
      });
    });
  }
});


},{}]},{},[1,2,3])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9jbWFja2VuemllL3Byb2plY3RzL2M0L3Rlc3Qvc2ltcGxlL21vZHVsZXMvY2Fycy9jYXJzLXNlcnZpY2UuY29mZmVlIiwiL1VzZXJzL2NtYWNrZW56aWUvcHJvamVjdHMvYzQvdGVzdC9zaW1wbGUvbW9kdWxlcy9jYXJzL3ZpZXdzL2NhcnMtbGlzdC5jb2ZmZWUiLCIvVXNlcnMvY21hY2tlbnppZS9wcm9qZWN0cy9jNC90ZXN0L3NpbXBsZS9tb2R1bGVzL2NhcnMvdmlld3MvY2Fycy1zaG93LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBLElBQUEsSUFBQTs7QUFBQSxJQUFBLEdBQU87RUFBQztBQUFBLElBQ04sSUFBQSxFQUFPLE9BREQ7QUFBQSxJQUVOLEtBQUEsRUFBTyxZQUZEO0FBQUEsSUFHTixJQUFBLEVBQU8sTUFIRDtBQUFBLElBSU4sS0FBQSxFQUFPLDJEQUpEO0dBQUQ7Q0FBUCxDQUFBOztBQUFBLEVBT0EsQ0FBRyxTQUFDLEdBQUQsR0FBQTtBQUVELE1BQUEsRUFBQTtBQUFBLEVBQUEsRUFBQSxHQUFLLFNBQUEsR0FBQTtXQUFHLEdBQUcsQ0FBQyxPQUFKLENBQVksTUFBWixDQUFtQixDQUFDLE9BQXBCLENBQTRCLFFBQTVCLEVBQXNDLElBQXRDLEVBQUg7RUFBQSxDQUFMLENBQUE7U0FDQSxVQUFBLENBQVcsRUFBWCxFQUFlLElBQWYsRUFIQztBQUFBLENBQUgsQ0FQQSxDQUFBOzs7O0FDQUEsRUFBRSxDQUFDLElBQUgsQ0FBUSxXQUFSLEVBQ0U7QUFBQSxFQUFBLElBQUEsRUFBTSwrQkFBTjtBQUFBLEVBQ0EsSUFBQSxFQUFNLFNBQUMsR0FBRCxHQUFBO0FBQ0osUUFBQSxJQUFBO0FBQUEsSUFBQSxJQUFBLEdBQU8sSUFBUCxDQUFBO0FBQUEsSUFFQSxHQUFHLENBQUMsT0FBSixDQUFZLE1BQVosQ0FBbUIsQ0FBQyxTQUFwQixDQUE4QixRQUE5QixFQUF3QyxTQUFDLElBQUQsR0FBQTtBQUN0QyxNQUFBLElBQUEsR0FBTyxJQUFQLENBQUE7YUFDQSxHQUFHLENBQUMsT0FBSixDQUFZLFdBQVosQ0FBd0IsQ0FBQyxPQUF6QixDQUFpQyxPQUFqQyxFQUZzQztJQUFBLENBQXhDLENBRkEsQ0FBQTtXQU1BLEdBQUcsQ0FBQyxPQUFKLENBQVksV0FBWixDQUF3QixDQUFDLFNBQXpCLENBQW1DLFNBQW5DLEVBQThDLFNBQUMsT0FBRCxHQUFBO2FBQzVDLE9BQU8sQ0FBQyxJQUFSLENBQ0U7QUFBQSxRQUFBLElBQUEsRUFBTSxJQUFOO0FBQUEsUUFDQSxNQUFBLEVBQVEsTUFEUjtPQURGLEVBRDRDO0lBQUEsQ0FBOUMsRUFQSTtFQUFBLENBRE47Q0FERixDQUFBLENBQUE7Ozs7QUNBQSxFQUFFLENBQUMsSUFBSCxDQUFRLFdBQVIsRUFDRTtBQUFBLEVBQUEsSUFBQSxFQUFNLCtCQUFOO0FBQUEsRUFDQSxJQUFBLEVBQU0sU0FBQyxHQUFELEdBQUE7QUFDSixRQUFBLGVBQUE7QUFBQSxJQUFBLElBQUEsR0FBTyxJQUFQLENBQUE7QUFBQSxJQUNBLFNBQUEsR0FBWSxJQURaLENBQUE7QUFBQSxJQUdBLEdBQUcsQ0FBQyxPQUFKLENBQVksTUFBWixDQUFtQixDQUFDLFNBQXBCLENBQThCLFFBQTlCLEVBQXdDLFNBQUMsSUFBRCxHQUFBO0FBQ3RDLE1BQUEsSUFBQSxHQUFPLElBQVAsQ0FBQTthQUNBLEdBQUcsQ0FBQyxPQUFKLENBQVksV0FBWixDQUF3QixDQUFDLE9BQXpCLENBQWlDLE9BQWpDLEVBRnNDO0lBQUEsQ0FBeEMsQ0FIQSxDQUFBO0FBQUEsSUFPQSxHQUFHLENBQUMsT0FBSixDQUFZLFdBQVosQ0FBd0IsQ0FBQyxTQUF6QixDQUFtQyxRQUFuQyxFQUE2QyxTQUFDLElBQUQsR0FBQTtBQUMzQyxNQUFBLFNBQUEsR0FBWSxJQUFJLENBQUMsR0FBakIsQ0FBQTthQUNBLEdBQUcsQ0FBQyxPQUFKLENBQVksV0FBWixDQUF3QixDQUFDLE9BQXpCLENBQWlDLE9BQWpDLEVBRjJDO0lBQUEsQ0FBN0MsQ0FQQSxDQUFBO1dBV0EsR0FBRyxDQUFDLE9BQUosQ0FBWSxXQUFaLENBQXdCLENBQUMsU0FBekIsQ0FBbUMsU0FBbkMsRUFBOEMsU0FBQyxPQUFELEdBQUE7YUFDNUMsT0FBTyxDQUFDLElBQVIsQ0FDRTtBQUFBLFFBQUEsR0FBQSxpQkFBSyxJQUFNLENBQUEsU0FBQSxVQUFYO09BREYsRUFENEM7SUFBQSxDQUE5QyxFQVpJO0VBQUEsQ0FETjtDQURGLENBQUEsQ0FBQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJDQVJTID0gW3tcbiAgbWFrZTogICdEb2RnZSdcbiAgbW9kZWw6ICdDaGFsbGVuZ2VyJ1xuICB5ZWFyOiAgJzIwMTUnXG4gIGltYWdlOiAnaHR0cDovL3pvbWJpZWRyaXZlLmNvbS9pbWFnZXMvMjAxNS1kb2RnZS1jaGFsbGVuZ2VyLTQuanBnJ1xufV1cblxuYzQgKGJ1cykgLT5cbiAgIyBtaW1pY3Mgc29tZSBzb3J0IG9mIGxvbmcgbG9hZCB0aW1lXG4gIGZuID0gLT4gYnVzLmNoYW5uZWwoJ2NhcnMnKS5wdWJsaXNoICdsb2FkZWQnLCBDQVJTXG4gIHNldFRpbWVvdXQgZm4sIDMwMDBcbiIsImM0LnZpZXcgJ2NhcnMtbGlzdCcsXG4gIHBhdGg6ICcvbW9kdWxlcy9jYXJzL3ZpZXdzL2xpc3QuaHRtbCdcbiAgaW5pdDogKGJ1cykgLT5cbiAgICBjYXJzID0gbnVsbFxuXG4gICAgYnVzLmNoYW5uZWwoJ2NhcnMnKS5zdWJzY3JpYmUgJ2xvYWRlZCcsIChkYXRhKSAtPlxuICAgICAgY2FycyA9IGRhdGFcbiAgICAgIGJ1cy5jaGFubmVsKCdjYXJzLWxpc3QnKS5wdWJsaXNoICdzdGFsZSdcblxuICAgIGJ1cy5jaGFubmVsKCdjYXJzLWxpc3QnKS5zdWJzY3JpYmUgJ2NvbXBpbGUnLCAoY29tcGlsZSkgLT5cbiAgICAgIGNvbXBpbGUubGlua1xuICAgICAgICBjYXJzOiBjYXJzXG4gICAgICAgIHNvdXJjZTogJ2NhcnMnXG4iLCJjNC52aWV3ICdjYXJzLXNob3cnLFxuICBwYXRoOiAnL21vZHVsZXMvY2Fycy92aWV3cy9zaG93Lmh0bWwnXG4gIGluaXQ6IChidXMpIC0+XG4gICAgY2FycyA9IG51bGxcbiAgICBzZWxlY3Rpb24gPSBudWxsXG5cbiAgICBidXMuY2hhbm5lbCgnY2FycycpLnN1YnNjcmliZSAnbG9hZGVkJywgKGRhdGEpIC0+XG4gICAgICBjYXJzID0gZGF0YVxuICAgICAgYnVzLmNoYW5uZWwoJ2NhcnMtc2hvdycpLnB1Ymxpc2ggJ3N0YWxlJ1xuXG4gICAgYnVzLmNoYW5uZWwoJ2NhcnMtc2hvdycpLnN1YnNjcmliZSAncGFyYW1zJywgKGRhdGEpIC0+XG4gICAgICBzZWxlY3Rpb24gPSBkYXRhLmNhclxuICAgICAgYnVzLmNoYW5uZWwoJ2NhcnMtc2hvdycpLnB1Ymxpc2ggJ3N0YWxlJ1xuXG4gICAgYnVzLmNoYW5uZWwoJ2NhcnMtc2hvdycpLnN1YnNjcmliZSAnY29tcGlsZScsIChjb21waWxlKSAtPlxuICAgICAgY29tcGlsZS5saW5rXG4gICAgICAgIGNhcjogY2Fycz9bc2VsZWN0aW9uXVxuIl19
